# Description: Upload to codeartifact repository pipeline.
# Version 1.0.0
# GitHub Code: https://github.com/Iberia-Ent/software-engineering--workflow-codeartifact-java-maven
# Githun Template: https://github.com/Iberia-Ent/software-engineering--codeartifact-java-maven-template
name: CodeArtifact Java Maven

on:  
  push:  
    branches-ignore: [ main, features ] 
  pull_request:  
    branches: [ features ]
    types:  [ closed ]
  release:
    types: [ created ]
 
jobs:
  Init:
    name: Set up variables
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
      LEVEL_READ_FILE: ${{ env.LEVEL_READ_FILE }}
      SUFIX_ARTIFACT_VERSION: ${{ env.SUFIX_ARTIFACT_VERSION }}
      
    steps:
    - uses: actions/checkout@v2    
    - name: Set Up Environment Name      
      run: |
        if [ ${{ github.event_name }} = pull_request ] && [ ${{ github.event.pull_request.merged }} ] && [ ${{ github.ref }} = features ] || [ ${{ github.event_name }} = push ]
        then                 
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
            echo DATA_JSON_FILE DEV: "$DATA_JSON_FILE"
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
            echo ENVIRONMENT_NAME=Development >> $GITHUB_ENV
            echo SUFIX_ARTIFACT_VERSION=SNAPSHOT >> $GITHUB_ENV
            echo LEVEL_READ_FILE=.snapshot >> $GITHUB_ENV
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        elif ${{ startsWith(github.ref, 'refs/tags/v') }} || ${{ startsWith(github.ref, 'refs/tags/HOTFIX_') }} && [ ${{ github.event_name }} = release ] 
        then               
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
            echo DATA_JSON_FILE PRO: "$DATA_JSON_FILE"
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
            echo ENVIRONMENT_NAME=Production >> $GITHUB_ENV
            echo SUFIX_ARTIFACT_VERSION= >> $GITHUB_ENV 
            echo LEVEL_READ_FILE=.release >> $GITHUB_ENV
            echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        fi
        
  CI:
    name: Continous Integration     
    needs: [Init]
    if: ${{ needs.Init.outputs.ENVIRONMENT_NAME }}
    runs-on: ubuntu-latest
    outputs:
      CODEARTIFACT_AUTH_TOKEN: ${{ env.CODEARTIFACT_AUTH_TOKEN }}
    environment: 
      name: ${{ needs.Init.outputs.ENVIRONMENT_NAME }}
        
    steps: 
    - uses: actions/checkout@v2
    
    - name: Loading Environment Variables
      uses: Iberia-Ent/software-engineering--read-file-action@v1.0.0
      with:
        level: '${{ needs.Init.outputs.LEVEL_READ_FILE }}'
    
    - name: Set up JDK ${{ env.JAVA_JDK_VERSION }}
      uses: actions/setup-java@v2
      with:
        java-version: '${{ env.JAVA_JDK_VERSION }}'
        distribution: '${{ env.JAVA_DISTRIBUTION }}'
        cache: 'maven'

    - name: Configure AWS credentials from DevOps account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set Up CodeArtifact Token   
      run: |         
        echo CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ${{ env.AWS_CODEARTIFACT_DOMAIN }} --domain-owner ${{ env.AWS_ACCOUNT_ID }} --query authorizationToken --output text --duration-seconds 900` >> $GITHUB_ENV

    - name: Build and Packaging Artifact
      run: |
       echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
       echo "Compiling..."
       echo "++++++++++++++++++++++++++++++++++++++++++++++++++"  
        mvn -B package --file pom.xml -s settings.xml 
  CD:
    name: Continous Deployment     
    needs: [Init, CI]
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged && github.ref == 'features' ) || (github.event_name == 'release' && (startsWith(github.ref, 'refs/tags/v') ||  startsWith(github.ref, 'refs/tags/HOTFIX_')))
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.Init.outputs.ENVIRONMENT_NAME }}
    env:
      CODEARTIFACT_AUTH_TOKEN: ${{ needs.CI.outputs.CODEARTIFACT_AUTH_TOKEN }}
        
    steps: 
    - uses: actions/checkout@v2
    
    - name: Loading Environment Variables
      uses: Iberia-Ent/software-engineering--read-file-action@v1.0.0
      with:
        level: '${{ needs.Init.outputs.LEVEL_READ_FILE }}'
    
    - name: Set up JDK ${{ env.JAVA_JDK_VERSION }}
      uses: actions/setup-java@v2
      with:
        java-version: '${{ env.JAVA_JDK_VERSION }}'
        distribution: '${{ env.JAVA_DISTRIBUTION }}'
        cache: 'maven'

    - name: Configure AWS credentials from DevOps account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Uploading Artifact to AWS CodeArtifact
      run: |
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "Getting version.."
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        POM_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' -s settings.xml --non-recursive exec:exec)
        echo POM_VERSION: $POM_VERSION
        echo POM_VERSION=$POM_VERSION >> $GITHUB_ENV
        ARTIFACT_VERSION=$POM_VERSION
      
        if [ ! -z "${{ needs.Init.outputs.SUFIX_ARTIFACT_VERSION }}" ]
        then
           ARTIFACT_VERSION="$POM_VERSION-${{ needs.Init.outputs.SUFIX_ARTIFACT_VERSION }}"
        fi
      
        echo SUFIX_ARTIFACT_VERSION=${{ needs.Init.outputs.SUFIX_ARTIFACT_VERSION }}
        echo ARTIFACT_VERSION=$ARTIFACT_VERSION 
      
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "Setting version..."
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        mvn versions:set -DnewVersion=$ARTIFACT_VERSION -s settings.xml
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "Commit changes into project..."
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        mvn versions:commit -s settings.xml
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        echo "Uploading packaging to codeartifact"
        echo "++++++++++++++++++++++++++++++++++++++++++++++++++"
        mvn deploy -DaltDeploymentRepository=$AWS_CODEARTIFACT_DOMAIN-$AWS_CODEARTIFACT_LIBRARY_REPOSITORY_NAME::default::${{ env.AWS_CODEARTIFACT_LIBRARY_REPOSITORY_URL }} -s settings.xml 
      
  TaggingRepository:
    name: Tagging Artifact Version into Repository
    needs: [CD]
    if: github.event_name == 'pull_request' && github.ref == 'features' && github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 
    
      - name: Tagging to Staging Branch        
        run: |
            artifactTag=$(date +'v%Y.%m.%d.%H%M')
            echo "$GITHUB_CONTEXT"
            echo "Tag Id: $artifactTag"
            messageTag="Tag $artifactTag created automatically new version of artifact"
            echo "Message Tag: $messageTag"
            git config --global user.email ""
            git config --global user.name "${{ github.actor }}"
            git tag -a $artifactTag -m "$messageTag"
            echo "Tag created: $artifactTag into features branch."
            git push --tags --progress
            echo "Push created with tag: $artifactTag"